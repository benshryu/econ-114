color[reject[1:100]] <- "black"
plot(0, xlim=c(0.8,1.2), ylim=c(1,100), ylab="Sample Number", xlab="", main="Assuming Homoskedasticity")
abline(v=2,lty=2)
for (i in 1:100){
lines(c(CI_lower[i], CI_upper[i]), c(j,j), col = olor[i], lwd = 2)
}
color <- rep(gray(.5),100)
color[reject_R[1:100]] <- "black"
plot(0, xlim=c(0.8,1.2), ylim=c(1,100), ylab="Sample Number", xlab="", main="Heteroskedasticity Robust")
for (i in 1:100){
lines(c(CI_lower[i], CI_upper[i]), c(i, i), col = color[i], lwd = 2)
}
color <- rep(gray(.5),100)
color[reject_R[1:100]] <- "black"
plot(0, xlim=c(0.8,1.2), ylim=c(1,100), ylab="Sample Number", xlab="", main="Heteroskedasticity Robust")
abline(v=2,lty=2)
for (i in 1:100){
lines(c(CI_lower_R [i],CI_upper_R [i]), c(i, i), col = color[i], lwd=2)
}
par(mfrow=c(1,2))
color <- rep(gray(.5),100)
color[reject[1:100]] <- "black"
plot(0, xlim=c(0.8,1.2), ylim=c(1,100), ylab="Sample Number", xlab="", main="Assuming Homoskedasticity")
abline(v=2,lty=2)
for (i in 1:100){
lines(c(CI_lower[i], CI_upper[i]), c(i, i), col = color[i], lwd = 2)
}
color <- rep(gray(.5),100)
color[reject_R[1:100]] <- "black"
plot(0, xlim=c(0.8,1.2), ylim=c(1,100), ylab="Sample Number", xlab="", main="Heteroskedasticity Robust")
abline(v=2,lty=2)
for (i in 1:100){
lines(c(CI_lower_R [i],CI_upper_R [i]), c(i, i), col = color[i], lwd=2)
}
abline(v=2,lty=2)
color <- rep(gray(.5),100)
color[reject[1:100]] <- "black"
plot(0, xlim=c(0.8,1.2), ylim=c(1,100), ylab="Sample Number", xlab="", main="Assuming Homoskedasticity")
plot(0, xlim=c(0.8,1.2), ylim=c(1,100), ylab="Sample Number", xlab="", main="Assuming Homoskedasticity")
abline(v=2,lty=2)
for (i in 1:100){
lines(c(CI_lower[i], CI_upper[i]), c(i, i), col = color[i], lwd = 2)
}
color <- rep(gray(.5),100)
color <- rep(gray(.5),100)
color[reject_R[1:100]] <- "black"
plot(0, xlim = c(0.8,1.2), ylim = c(1,100), ylab = "Sample #", xlab = "", main = "Heteroskedasticity Robust")
plot(0, xlim=c(0.8, 1.2), ylim=c(1, 100), ylab="Sample #", main = "Assuming Homoskedasticity")
abline(v=2,lty=2)
for (i in 1:100){
lines(c(CI_lower[i], CI_upper[i]), c(i, i), col = color[i], lwd = 2)
}
color <- rep(gray(.5),100)
color[reject_R[1:100]] <- "black"
plot(0, xlim = c(0.8,1.2), ylim = c(1, 100), ylab = "Sample #", main = "Heteroskedasticity Robust")
abline(v=2,lty=2)
plot(0, xlim=c(0.8, 1.2), ylim=c(1, 100), ylab="Sample #", main = "Assuming Homoskedasticity")
abline(v=2,lty=2)
for (i in 1:100){
lines(c(CI_lower[i], CI_upper[i]), c(i, i), col = color[i], lwd = 2)
}
color <- rep(gray(.5),100)
color[reject_R[1:100]] <- "black"
plot(0, xlim = c(0.8,1.2), ylim = c(1, 100), ylab = "Sample #", main = "Heteroskedasticity Robust")
abline(v=2,lty=2)
for (i in 1:100){
lines(c(CI_lower_R [i],CI_upper_R [i]), c(i, i), col = color[i], lwd=2)
}
plot(0, xlim=c(0.8, 1.2), ylim=c(1, 100), ylab="Sample #", main = "Assuming Homoskedasticity")
abline(v=2,lty=2)
for (i in 1:100){
lines(c(CI_lower[i], CI_upper[i]), c(i, i), col = color[i], lwd = 2)
}
color <- rep(gray(.5),100)
color[reject_R[1:100]] <- "black"
plot(0, xlim = c(0.8,1.2), ylim = c(1, 100), ylab = "Sample #", main = "Heteroskedasticity Robust")
abline(v=2,lty=2)
for (i in 1:100){
lines(c(CI_lower_R [i],CI_upper_R [i]), c(i, i), col = color[i], lwd=2)
}
plot(0, xlim=c(0.8, 1.2), ylim=c(1, 100), ylab="Sample #", main = "Assuming Homoskedasticity")
abline(v=2,lty=2)
for (i in 1:100){
lines(c(CI_lower[i], CI_upper[i]), c(i, i), col = color[i], lwd = 2)
}
color <- rep(gray(.5),100)
color[reject_R[1:100]] <- "black"
plot(0, xlim = c(0.8,1.2), ylim = c(1, 100), ylab = "Sample #", main = "Heteroskedasticity Robust")
abline(v=2,lty=2)
for (i in 1:100){
lines(c(CI_lower_R [i],CI_upper_R [i]), c(i, i), col = color[i], lwd=2)
}
plot(0, xlim=c(0.8, 1.2), ylim=c(1, 100), ylab="Sample #", main = "Assuming Homoskedasticity")
abline(v=2,lty=2)
for (i in 1:100){
lines(c(CI_lower[i], CI_upper[i]), c(i, i), col = color[i], lwd = 2)
}
color <- rep(gray(.5),100)
color[reject_R[1:100]] <- "black"
plot(0, xlim = c(0.8,1.2), ylim = c(1, 100), ylab = "Sample #", main = "Heteroskedasticity Robust")
abline(v=2,lty=2)
for (i in 1:100){
lines(c(CI_lower_R [i],CI_upper_R [i]), c(i, i), col = color[i], lwd=2)
}
plot(0, xlim=c(0.8, 1.2), ylim=c(1, 100), ylab="Sample #", main = "Assuming Homoskedasticity")
abline(v=2,lty=2)
for (i in 1:100){
lines(c(CI_lower[i], CI_upper[i]), c(i, i), col = color[i], lwd = 2)
}
color <- rep(gray(.5),100)
color[reject_R[1:100]] <- "black"
plot(0, xlim = c(0.8,1.2), ylim = c(1, 100), ylab = "Sample #", main = "Heteroskedasticity Robust")
abline(v=2,lty=2)
for (i in 1:100){
lines(c(CI_lower_R [i],CI_upper_R [i]), c(i, i), col = color[i], lwd=2)
}
par(mfrow=c(1,2))
color <- rep(gray(.5),100)
color[reject[1:100]] <- "black"
plot(0, xlim=c(0.8, 1.2), ylim=c(1, 100), ylab="Sample #", main = "Assuming Homoskedasticity")
abline(v=2,lty=2)
for (i in 1:100){
lines(c(CI_lower[i], CI_upper[i]), c(i, i), col = color[i], lwd = 2)
}
# c
rm(list = ls())
S <- 100
n <- 1000
beta0 <- 0
beta1 <- 1
gamma <- 0
beta1hat_ols <- numeric(S)
avar <- numeric(S)
avar_R <- numeric(S)
for (i in 1:S){
x <- rnorm(n, 0, 1)
u <- rnorm(n, 0, 1)
y <- beta0 + beta1 * x + (1 + gamma * x) * u
beta1hat_ols[i] <- cov(x,y)/var(x)
beta0hat_ols <- mean(y) - beta1hat_ols[i] * mean(x)
hatv <- y - beta0hat_ols - beta1hat_ols[i] * x
varx <- mean((x - mean(x))^2)
avar[i] <- (1/n) * mean(hatv^2)/varx
avar_R[i] <- (1/n) * mean((x-mean(x))^2 * hatv^2)/varx^2
}
CI_lower <- beta1hat_ols - 1.96*sqrt(avar)
CI_upper <- beta1hat_ols + 1.96*sqrt(avar)
reject <- as.logical((CI_lower>1) + (CI_upper<1))
CI_lower_R <- beta1hat_ols - 1.96*sqrt(avar_R)
CI_upper_R <- beta1hat_ols + 1.96*sqrt(avar_R)
reject_R <- as.logical((CI_lower_R>1) + (CI_upper_R<1))
1-mean(reject)
1-mean(reject_R)
par(mfrow=c(1,2))
color <- rep(gray(.5),100)
color[reject[1:100]] <- "black"
plot(0, xlim=c(0.8, 1.2), ylim=c(1, 100), ylab="Sample #", main = "Assuming Homoskedasticity")
abline(v=2,lty=2)
for (i in 1:100){
lines(c(CI_lower[i], CI_upper[i]), c(i, i), col = color[i], lwd = 2)
}
color <- rep(gray(.5),100)
color[reject_R[1:100]] <- "black"
plot(0, xlim = c(0.8,1.2), ylim = c(1, 100), ylab = "Sample #", main = "Heteroskedasticity Robust")
abline(v=2,lty=2)
for (i in 1:100){
lines(c(CI_lower_R [i],CI_upper_R [i]), c(i, i), col = color[i], lwd=2)
}
# d
rm(list = ls())
# d
rm(list = ls())
S <- 100
n <- 1000
beta0 <- 0
beta1 <- 1
beta1hat_ols <- numeric(S)
avar <- numeric(S)
avar_R <- numeric(S)
emp_coverage <- function(gamma) {
set.seed(0)
for (i in 1:S){
x <- rnorm(n, 0, 1)
u <- rnorm(n, 0, 1)
y <- beta0 + beta1 * x + (1 + gamma * x) * u
beta1hat_ols[i] <- cov(x,y)/var(x)
beta0hat_ols <- mean(y) - beta1hat_ols[i] * mean(x)
hatv <- y - beta0hat_ols - beta1hat_ols[i] * x
varx <- mean((x - mean(x))^2)
avar[i] <- (1/n) * mean(hatv^2)/varx
avar_R[i] <- (1/n) * mean((x-mean(x))^2 * hatv^2)/varx^2
}
CI_lower_0 <- beta1_hat_ols - 1.96*sqrt(avar)
CI_upper_0 <- beta1_hat_ols + 1.96*sqrt(avar)
reject0 <- as.numeric((CI_lower_0>1) + (CI_upper_0<1))
CI_lower_0_R <- beta1_hat_ols - 1.96*sqrt(avar_R)
CI_upper_0_R <- beta1_hat_ols + 1.96*sqrt(avar_R)
reject0_R <- as.numeric((CI_lower_0_R>1) + (CI_upper_0_R<1))
cbind(1-mean(reject0), 1 - mean(reject0_R) )
}
empirical_coverage(0.3)
emp_coverage(0.3)
emp_coverage <- function(gamma) {
set.seed(0)
for (i in 1:S){
x <- rnorm(n, 0, 1)
u <- rnorm(n, 0, 1)
y <- beta0 + beta1 * x + (1 + gamma * x) * u
beta1hat_ols[i] <- cov(x,y)/var(x)
beta0hat_ols <- mean(y) - beta1hat_ols[i] * mean(x)
hatv <- y - beta0hat_ols - beta1hat_ols[i] * x
varx <- mean((x - mean(x))^2)
avar[i] <- (1/n) * mean(hatv^2)/varx
avar_R[i] <- (1/n) * mean((x-mean(x))^2 * hatv^2)/varx^2
}
CI_lower0 <- beta1hat_ols - 1.96*sqrt(avar)
CI_upper0 <- beta1hat_ols + 1.96*sqrt(avar)
reject0 <- as.numeric((CI_lower0 > 1) + (CI_upper0 < 1))
CI_lower0_R <- beta1hat_ols - 1.96*sqrt(avar_R)
CI_upper0_R <- beta1hat_ols + 1.96*sqrt(avar_R)
reject0_R <- as.numeric((CI_lower0_R > 1) + (CI_upper0_R < 1))
cbind(1 - mean(reject0), 1 - mean(reject0_R) )
}
emp_coverage(0.3)
grid <- seq(from = 0, to = 2, by = 0.1)
coverage <- sapply(X = grid,  FUN = empirical_coverage)
coverage <- sapply(X = grid,  FUN = emp_coverage)
par(mfrow=c(1,2))
plot(grid, coverage[1,])
plot(grid, coverage[2,])
# Question 1
# a
# b
rm(list = ls())
S <- 1000
n <- 500
beta0 <- 1
beta1 <- 1
pi0 <- 1
pi1 <- 1
rho <- 0
set.seed(0)
ols <- numeric(S)
iv <- numeric(S)
for (i in 1:S){
z <- rnorm(n, 0, 1)
u <- rnorm(n, 0, 1)
h <- rnorm(n, 0, 1)
v <- rho * u + (1 - rho) * h
x <- pi0 + pi1 * z + v
y <- beta0 + beta1*x + u
ols_est <- lm(y ~ x)
ols[i] <- coef(ols_est)["x"]
iv_est <- ivreg(y ~ x | z)
iv[i] <- coef(iv_est)["x"]
}
# c
plot(density(ols), xlim = c(0.7, 1.7))
lines(density(iv), col = "red")
# d
mean(ols)
mean(iv)
sd(ols)
sd(iv)
# Question 2
# a
rm(list = ls())
S <- 100
n <- 1000
beta0 <- 0
beta1 <- 1
gamma <- 1
beta1hat_ols <- numeric(S)
avar <- numeric(S)
avar_R <- numeric(S)
for (i in 1:S){
x <- rnorm(n, 0, 1)
u <- rnorm(n, 0, 1)
y <- beta0 + beta1 * x + (1 + gamma * x) * u
beta1hat_ols[i] <- cov(x,y)/var(x)
beta0hat_ols <- mean(y) - beta1hat_ols[i] * mean(x)
hatv <- y - beta0hat_ols - beta1hat_ols[i] * x
varx <- mean((x - mean(x))^2)
avar[i] <- (1/n) * mean(hatv^2)/varx
avar_R[i] <- (1/n) * mean((x-mean(x))^2 * hatv^2)/varx^2
}
# b
ci_lower <- beta1hat_ols - 1.96*sqrt(avar)
ci_upper <- beta1hat_ols + 1.96*sqrt(avar)
reject <- as.logical((ci_lower>1) + (ci_upper<1))
ci_lower_R <- beta1hat_ols - 1.96*sqrt(avar_R)
ci_upper_R <- beta1hat_ols + 1.96*sqrt(avar_R)
reject_R <- as.logical((ci_lower_R>1) + (ci_upper_R<1))
1-mean(reject)
1-mean(reject_R)
par(mfrow=c(1,2))
color <- rep(gray(.5),100)
color[reject[1:100]] <- "black"
plot(0, xlim=c(0.8, 1.2), ylim=c(1, 100), ylab="Sample #", main = "Assuming Homoskedasticity")
abline(v=2,lty=2)
for (i in 1:100){
lines(c(ci_lower[i], ci_upper[i]), c(i, i), col = color[i], lwd = 2)
}
color <- rep(gray(.5),100)
color[reject_R[1:100]] <- "black"
plot(0, xlim = c(0.8,1.2), ylim = c(1, 100), ylab = "Sample #", main = "Heteroskedasticity Robust")
abline(v=2,lty=2)
for (i in 1:100){
lines(c(ci_lower_R [i],ci_upper_R [i]), c(i, i), col = color[i], lwd=2)
}
# c
rm(list = ls())
S <- 100
n <- 1000
beta0 <- 0
beta1 <- 1
gamma <- 0
beta1hat_ols <- numeric(S)
avar <- numeric(S)
avar_R <- numeric(S)
for (i in 1:S){
x <- rnorm(n, 0, 1)
u <- rnorm(n, 0, 1)
y <- beta0 + beta1 * x + (1 + gamma * x) * u
beta1hat_ols[i] <- cov(x,y)/var(x)
beta0hat_ols <- mean(y) - beta1hat_ols[i] * mean(x)
hatv <- y - beta0hat_ols - beta1hat_ols[i] * x
varx <- mean((x - mean(x))^2)
avar[i] <- (1/n) * mean(hatv^2)/varx
avar_R[i] <- (1/n) * mean((x-mean(x))^2 * hatv^2)/varx^2
}
ci_lower <- beta1hat_ols - 1.96*sqrt(avar)
ci_upper <- beta1hat_ols + 1.96*sqrt(avar)
reject <- as.logical((ci_lower>1) + (ci_upper<1))
ci_lower_R <- beta1hat_ols - 1.96*sqrt(avar_R)
ci_upper_R <- beta1hat_ols + 1.96*sqrt(avar_R)
reject_R <- as.logical((ci_lower_R>1) + (ci_upper_R<1))
1-mean(reject)
1-mean(reject_R)
par(mfrow=c(1,2))
color <- rep(gray(.5),100)
color[reject[1:100]] <- "black"
plot(0, xlim=c(0.8, 1.2), ylim=c(1, 100), ylab="Sample #", main = "Assuming Homoskedasticity with gamma = 0")
abline(v=2,lty=2)
for (i in 1:100){
lines(c(ci_lower[i], ci_upper[i]), c(i, i), col = color[i], lwd = 2)
}
color <- rep(gray(.5),100)
color[reject_R[1:100]] <- "black"
plot(0, xlim = c(0.8,1.2), ylim = c(1, 100), ylab = "Sample #", main = "Heteroskedasticity Robust with gamma = 0")
abline(v=2,lty=2)
for (i in 1:100){
lines(c(ci_lower_R [i],ci_upper_R [i]), c(i, i), col = color[i], lwd=2)
}
# d
rm(list = ls())
S <- 100
n <- 1000
beta0 <- 0
beta1 <- 1
beta1hat_ols <- numeric(S)
avar <- numeric(S)
avar_R <- numeric(S)
emp_coverage <- function(gamma) {
set.seed(0)
for (i in 1:S){
x <- rnorm(n, 0, 1)
u <- rnorm(n, 0, 1)
y <- beta0 + beta1 * x + (1 + gamma * x) * u
beta1hat_ols[i] <- cov(x,y)/var(x)
beta0hat_ols <- mean(y) - beta1hat_ols[i] * mean(x)
hatv <- y - beta0hat_ols - beta1hat_ols[i] * x
varx <- mean((x - mean(x))^2)
avar[i] <- (1/n) * mean(hatv^2)/varx
avar_R[i] <- (1/n) * mean((x-mean(x))^2 * hatv^2)/varx^2
}
ci_lower <- beta1hat_ols - 1.96 * sqrt(avar)
ci_upper <- beta1hat_ols + 1.96 * sqrt(avar)
reject <- as.numeric((ci_lower > 1) + (ci_upper < 1))
ci_lower_R <- beta1hat_ols - 1.96 * sqrt(avar_R)
ci_upper_R <- beta1hat_ols + 1.96 * sqrt(avar_R)
reject_R <- as.numeric((ci_lower_R > 1) + (ci_upper_R < 1))
cbind(1 - mean(reject), 1 - mean(reject_R) )
}
emp_coverage(0.3)
grid <- seq(from = 0, to = 2, by = 0.1)
coverage <- sapply(X = grid,  FUN = emp_coverage)
par(mfrow=c(1,2))
plot(grid, coverage[1,])
plot(grid, coverage[2,])
# b
rm(list = ls()) #Clear the environment.
## Part (b)
S <- 1000 # of iterations
n <- 1000  # size of each sample
# Set parameter values according to part (b).
beta0 <- 0
beta1 <- 2
pi0 <- 0
pi1 <- 1/sqrt(n)
# In Question 3, u & v [the error terms in (1) & (2)] are systematically correlated via equation (3).
# Set rho = 0.9 in (3).
rho <- 0.9
set.seed(0)
# Prepare containers for beta1_hat_iv.
iv <- numeric(S)
beta1hat <- numeric(S)
avar <- numeric(S)
for (j in 1:S){
z <- rnorm(n,0,1)
u <- rnorm(n,0,1)
h <- rnorm(n,0,1)
v <- rho*u + (1-rho) * h
x <- pi0 + pi1 * z + v
y <- beta0 + beta1 * x + u
beta1hat_iv[i] <- cov(z,y)/cov(z,x)
beta0hat_iv <- mean(y)- beta1hat_iv[i] * mean(x)
hatu <- y- beta0hat_iv - beta1hat_iv[i] * x
covxz <- mean((x - mean(x)) * (z - mean(z)))
avar[i] <- 1/n * mean((z - mean(z))^2 * hatu^2)/covxz^2
}
## Part (c)
beta_norm <- (beta1hat_iv-beta_1)/sqrt(avar_iv)
par(mfrow=c(1, 1))
for (j in 1:S){
z <- rnorm(n,0,1)
u <- rnorm(n,0,1)
h <- rnorm(n,0,1)
v <- rho*u + (1-rho) * h
x <- pi0 + pi1 * z + v
y <- beta0 + beta1 * x + u
beta1hat[i] <- cov(z,y)/cov(z,x)
beta0hat <- mean(y)- beta1hat[i] * mean(x)
hatu <- y- beta0hat - beta1hat[i] * x
covxz <- mean((x - mean(x)) * (z - mean(z)))
avar[i] <- 1/n * mean((z - mean(z))^2 * hatu^2)/covxz^2
}
for (i in 1:S){
z <- rnorm(n,0,1)
u <- rnorm(n,0,1)
h <- rnorm(n,0,1)
v <- rho*u + (1-rho) * h
x <- pi0 + pi1 * z + v
y <- beta0 + beta1 * x + u
beta1hat[i] <- cov(z,y)/cov(z,x)
beta0hat <- mean(y)- beta1hat[i] * mean(x)
hatu <- y- beta0hat - beta1hat[i] * x
covxz <- mean((x - mean(x)) * (z - mean(z)))
avar[i] <- 1/n * mean((z - mean(z))^2 * hatu^2)/covxz^2
}
## Part (c)
beta_norm <- (beta1hat-beta1)/sqrt(avar_iv)
## Part (c)
beta_norm <- (beta1hat-beta1)/sqrt(avar)
par(mfrow=c(1, 1))
plot(density(beta_norm))
curve(dnorm(x, 0, 1), add = TRUE, lty = 2)
ci_lower <- beta1hat_iv - 1.96*sqrt(avar_iv)
ci_lower <- beta1hat - 1.96*sqrt(avar_iv)
ci_upper <- beta1hat + 1.96*sqrt(avar_iv)
ci_lower <- beta1hat - 1.96*sqrt(avar)
ci_upper <- beta1hat + 1.96*sqrt(avar)
reject <- as.logical((ci_lower>2) + (ci_upper<2))
1-mean(reject) #empirical coverage is quite distorted.
par(mfrow=c(1, 1))
color <- rep(gray(.5), 100)
color[reject [1:100]] <- "black"
plot(0, xlim = c(0, 4), ylim = c(1 , 100), ylab = "Sample #", main = "Assuming Homoskedasticity")
abline(v = 2,lty = 2)
for (i in 1:100){
lines(c(ci_lower[i], ci_upper[i]), c(i, i), col = color[i], lwd = 2)
}
# Many CIs do not include the true value 2.
# Many CIs do not include the true value 2.
par(mfrow=c(1, 1))
color <- rep(gray(.5), 100)
color[reject [1:100]] <- "black"
plot(0, xlim = c(0, 4), ylim = c(1 , 100), ylab = "Sample #", main = "Assuming Homoskedasticity")
plot(0, xlim = c(0, 4), ylim = c(0 , 100), ylab = "Sample #", main = "Assuming Homoskedasticity")
plot(0, xlim = c(0, 4), ylim = c(1 , 100), ylab = "Sample #", main = "Assuming Homoskedasticity")
abline(v = 2,lty = 2)
par(mfrow=c(1,2))
color <- rep(gray(.5),100)
color[reject[1:100]] <- "black"
plot(0, xlim=c(0.8, 1.2), ylim=c(1, 100), ylab="Sample #", main = "Assuming Homoskedasticity with gamma = 0")
abline(v=2,lty=2)
abline(v = 1,lty = 2)
color <- rep(gray(.5),100)
color[reject[1:100]] <- "black"
plot(0, xlim=c(0.8, 1.2), ylim=c(1, 100), ylab="Sample #", main = "Assuming Homoskedasticity with gamma = 0")
abline(v = 1,lty = 2)
for (i in 1:100){
lines(c(ci_lower[i], ci_upper[i]), c(i, i), col = color[i], lwd = 2)
}
color <- rep(gray(.5),100)
color[reject_R[1:100]] <- "black"
plot(0, xlim = c(0.8,1.2), ylim = c(1, 100), ylab = "Sample #", main = "Heteroskedasticity Robust with gamma = 0")
abline(v = 1, lty = 2)
for (i in 1:100){
lines(c(ci_lower_R [i],ci_upper_R [i]), c(i, i), col = color[i], lwd=2)
}
# d
rm(list = ls())
S <- 100
# c
plot(density(ols), xlim = c(0.7, 1.7))
lines(density(iv), col = "red")
# d
mean(ols)
# c
plot(density(ols), xlim = c(0.7, 1.7))
lines(density(iv), col = "red")
